name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi
          poetry install --only dev --no-interaction --no-ansi

      - name: Run unit tests with coverage
        run: |
          mkdir -p coverage/unit
          pytest -q --cov=src --cov-report=xml:coverage/unit/coverage-unit.xml --cov-report=html:coverage/unit/coverage-unit.html --cov-report=lcov:coverage/unit/coverage-unit.lcov tests/unit
          mv .coverage coverage/unit/coverage-unit.cov
          ls -la coverage/unit || true
          test -f coverage/unit/coverage-unit.cov && echo "✓ Coverage database file created" || echo "✗ WARNING: Coverage database file not found!"
      - name: Upload unit coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: |
            coverage/unit/coverage-unit.cov
            coverage/unit/coverage-unit.lcov
            coverage/unit/coverage-unit.xml
            coverage/unit/coverage-unit.html

  test-integration:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi
          poetry install --only dev --no-interaction --no-ansi

      - name: Run integration tests with coverage
        run: |
          mkdir -p coverage/integration
          pytest -q --cov=src --cov-report=xml:coverage/integration/coverage-integration.xml --cov-report=html:coverage/integration/coverage-integration.html --cov-report=lcov:coverage/integration/coverage-integration.lcov tests/integration
          mv .coverage coverage/integration/coverage-integration.cov
          ls -la coverage/integration || true
          test -f coverage/integration/coverage-integration.cov && echo "✓ Coverage database file created" || echo "✗ WARNING: Coverage database file not found!"

      - name: Upload integration coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: |
            coverage/integration/coverage-integration.cov
            coverage/integration/coverage-integration.lcov
            coverage/integration/coverage-integration.xml
            coverage/integration/coverage-integration.html

  test-feature-component:
    name: Feature-Component tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi
          poetry install --only dev --no-interaction --no-ansi

      - name: Run feature-component tests with coverage
        run: |
          mkdir -p coverage/feature-component
          pytest -q --cov=src --cov-report=xml:coverage/feature-component/coverage-feature-component.xml --cov-report=html:coverage/feature-component/coverage-feature-component.html --cov-report=lcov:coverage/feature-component/coverage-feature-component.lcov tests/feature-component
          mv .coverage coverage/feature-component/coverage-feature-component.cov
          ls -la coverage/feature-component || true
          test -f coverage/feature-component/coverage-feature-component.cov && echo "✓ Coverage database file created" || echo "✗ WARNING: Coverage database file not found!"
      - name: Upload feature-component coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-feature-component
          path: |
            coverage/feature-component/coverage-feature-component.cov
            coverage/feature-component/coverage-feature-component.lcov
            coverage/feature-component/coverage-feature-component.xml
            coverage/feature-component/coverage-feature-component.html

  code-coverage:
    name: Coverage quality check
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-feature-component]
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi
          poetry install --only dev --no-interaction --no-ansi

      - name: Download coverage artifacts
        uses: actions/download-artifact@v5
        with:
          path: coverage-artifacts

      - name: Merge coverage data
        run: |
          # ls -laR coverage-artifacts || true
          test -f coverage-artifacts && echo "✓ Coverage artifacts directory found" || echo "✗ WARNING: Coverage artifacts directory not found!"

          mkdir -p coverage || true
          mv coverage-artifacts/coverage-unit coverage/unit || true
          mv coverage-artifacts/coverage-integration coverage/integration || true
          mv coverage-artifacts/coverage-feature-component coverage/feature-component || true

          test -d coverage/unit/ && echo "✓ Coverage unit directory found" || echo "✗ WARNING: Coverage unit directory not found!"
          test -d coverage/integration/ && echo "✓ Coverage integration directory found" || echo "✗ WARNING: Coverage integration directory not found!"
          test -d coverage/feature-component/ && echo "✓ Coverage feature-component directory found" || echo "✗ WARNING: Coverage feature-component directory not found!"

          # ls -laR coverage/unit/ || true
          # ls -laR coverage/integration/ || true
          # ls -laR coverage/feature-component/ || true

          coverage combine --keep --data-file=coverage/coverage.combined coverage/*/coverage-*.cov || true
          coverage lcov --data-file=coverage/coverage.combined -o coverage/coverage-combined.lcov
          coverage xml --data-file=coverage/coverage.combined -o coverage/coverage-combined.xml
          coverage html --data-file=coverage/coverage.combined --directory=coverage/coverage-combined.html
          # coverage report --data-file=coverage/coverage.combined --fail-under=80

      - name: Coverage quality check
        run: |
          coverage report --data-file=coverage/coverage.combined --fail-under=80

      - name: Upload combined coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-combined
          path: |
            coverage/unit/coverage-unit.cov
            coverage/unit/coverage-unit.lcov
            coverage/unit/coverage-unit.xml
            coverage/unit/coverage-unit.html
            coverage/integration/coverage-integration.cov
            coverage/integration/coverage-integration.lcov
            coverage/integration/coverage-integration.xml
            coverage/integration/coverage-integration.html
            coverage/feature-component/coverage-feature-component.cov
            coverage/feature-component/coverage-feature-component.lcov
            coverage/feature-component/coverage-feature-component.xml
            coverage/feature-component/coverage-feature-component.html
            coverage/coverage.combined
            coverage/coverage-combined.lcov
            coverage/coverage-combined.xml
            coverage/coverage-combined.html

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-feature-component]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --only main --no-interaction --no-ansi
        poetry install --only dev --no-interaction --no-ansi

    - name: Run linters
      run: |
        poetry run black --check src/ tests/
        poetry run ruff check src/ tests/
        #poetry run mypy src/

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [lint, code-coverage]
    steps:
    - uses: actions/checkout@v5

    - name: Build Docker image
      run: docker build -t robot-flower-princess:test .

    - name: Test Docker image
      run: |
        docker run -d -p 8000:8000 --name test-api robot-flower-princess:test
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-api
