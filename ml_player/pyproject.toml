[tool.poetry]
name = "ml-player"
version = "0.1.0"
description = "ML-based player for Robot Flower Princess game using hybrid heuristic and future ML capabilities"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.9.2"
pydantic-settings = "^2.6.1"
httpx = "^0.27.2"
# ML dependencies
numpy = "^2.0.0"
scikit-learn = "^1.5.0"
# torch = "^2.4.0"  # Uncomment when adding deep learning

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.24.0"
black = "^24.10.0"
ruff = "^0.7.3"
coverage = {extras = ["toml"], version = "^7.6.4"}

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 120
target-version = ['py313']

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
